/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as CatalogIndexRouteImport } from './routes/catalog/index'
import { Route as CatalogCampaign_idRouteRouteImport } from './routes/catalog/$campaign_id/route'
import { Route as DashboardProductIndexRouteImport } from './routes/dashboard/product/index'
import { Route as DashboardOrderIndexRouteImport } from './routes/dashboard/order/index'
import { Route as DashboardClientIndexRouteImport } from './routes/dashboard/client/index'
import { Route as DashboardCategoryIndexRouteImport } from './routes/dashboard/category/index'
import { Route as DashboardCatalogIndexRouteImport } from './routes/dashboard/catalog/index'
import { Route as DashboardCampaignIndexRouteImport } from './routes/dashboard/campaign/index'
import { Route as CatalogCampaign_idIndexRouteImport } from './routes/catalog/$campaign_id/index'
import { Route as DashboardCatalogCatalog_idIndexRouteImport } from './routes/dashboard/catalog/$catalog_id/index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const CatalogIndexRoute = CatalogIndexRouteImport.update({
  id: '/catalog/',
  path: '/catalog/',
  getParentRoute: () => rootRouteImport,
} as any)
const CatalogCampaign_idRouteRoute = CatalogCampaign_idRouteRouteImport.update({
  id: '/catalog/$campaign_id',
  path: '/catalog/$campaign_id',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProductIndexRoute = DashboardProductIndexRouteImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardOrderIndexRoute = DashboardOrderIndexRouteImport.update({
  id: '/order/',
  path: '/order/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardClientIndexRoute = DashboardClientIndexRouteImport.update({
  id: '/client/',
  path: '/client/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCategoryIndexRoute = DashboardCategoryIndexRouteImport.update({
  id: '/category/',
  path: '/category/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCatalogIndexRoute = DashboardCatalogIndexRouteImport.update({
  id: '/catalog/',
  path: '/catalog/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCampaignIndexRoute = DashboardCampaignIndexRouteImport.update({
  id: '/campaign/',
  path: '/campaign/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const CatalogCampaign_idIndexRoute = CatalogCampaign_idIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CatalogCampaign_idRouteRoute,
} as any)
const DashboardCatalogCatalog_idIndexRoute =
  DashboardCatalogCatalog_idIndexRouteImport.update({
    id: '/catalog/$catalog_id/',
    path: '/catalog/$catalog_id/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/catalog/$campaign_id': typeof CatalogCampaign_idRouteRouteWithChildren
  '/catalog': typeof CatalogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/catalog/$campaign_id/': typeof CatalogCampaign_idIndexRoute
  '/dashboard/campaign': typeof DashboardCampaignIndexRoute
  '/dashboard/catalog': typeof DashboardCatalogIndexRoute
  '/dashboard/category': typeof DashboardCategoryIndexRoute
  '/dashboard/client': typeof DashboardClientIndexRoute
  '/dashboard/order': typeof DashboardOrderIndexRoute
  '/dashboard/product': typeof DashboardProductIndexRoute
  '/dashboard/catalog/$catalog_id': typeof DashboardCatalogCatalog_idIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/catalog': typeof CatalogIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/catalog/$campaign_id': typeof CatalogCampaign_idIndexRoute
  '/dashboard/campaign': typeof DashboardCampaignIndexRoute
  '/dashboard/catalog': typeof DashboardCatalogIndexRoute
  '/dashboard/category': typeof DashboardCategoryIndexRoute
  '/dashboard/client': typeof DashboardClientIndexRoute
  '/dashboard/order': typeof DashboardOrderIndexRoute
  '/dashboard/product': typeof DashboardProductIndexRoute
  '/dashboard/catalog/$catalog_id': typeof DashboardCatalogCatalog_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/catalog/$campaign_id': typeof CatalogCampaign_idRouteRouteWithChildren
  '/catalog/': typeof CatalogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/catalog/$campaign_id/': typeof CatalogCampaign_idIndexRoute
  '/dashboard/campaign/': typeof DashboardCampaignIndexRoute
  '/dashboard/catalog/': typeof DashboardCatalogIndexRoute
  '/dashboard/category/': typeof DashboardCategoryIndexRoute
  '/dashboard/client/': typeof DashboardClientIndexRoute
  '/dashboard/order/': typeof DashboardOrderIndexRoute
  '/dashboard/product/': typeof DashboardProductIndexRoute
  '/dashboard/catalog/$catalog_id/': typeof DashboardCatalogCatalog_idIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/catalog/$campaign_id'
    | '/catalog'
    | '/dashboard/'
    | '/catalog/$campaign_id/'
    | '/dashboard/campaign'
    | '/dashboard/catalog'
    | '/dashboard/category'
    | '/dashboard/client'
    | '/dashboard/order'
    | '/dashboard/product'
    | '/dashboard/catalog/$catalog_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/catalog'
    | '/dashboard'
    | '/catalog/$campaign_id'
    | '/dashboard/campaign'
    | '/dashboard/catalog'
    | '/dashboard/category'
    | '/dashboard/client'
    | '/dashboard/order'
    | '/dashboard/product'
    | '/dashboard/catalog/$catalog_id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/catalog/$campaign_id'
    | '/catalog/'
    | '/dashboard/'
    | '/catalog/$campaign_id/'
    | '/dashboard/campaign/'
    | '/dashboard/catalog/'
    | '/dashboard/category/'
    | '/dashboard/client/'
    | '/dashboard/order/'
    | '/dashboard/product/'
    | '/dashboard/catalog/$catalog_id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  CatalogCampaign_idRouteRoute: typeof CatalogCampaign_idRouteRouteWithChildren
  CatalogIndexRoute: typeof CatalogIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/catalog/': {
      id: '/catalog/'
      path: '/catalog'
      fullPath: '/catalog'
      preLoaderRoute: typeof CatalogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/catalog/$campaign_id': {
      id: '/catalog/$campaign_id'
      path: '/catalog/$campaign_id'
      fullPath: '/catalog/$campaign_id'
      preLoaderRoute: typeof CatalogCampaign_idRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/product/': {
      id: '/dashboard/product/'
      path: '/product'
      fullPath: '/dashboard/product'
      preLoaderRoute: typeof DashboardProductIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/order/': {
      id: '/dashboard/order/'
      path: '/order'
      fullPath: '/dashboard/order'
      preLoaderRoute: typeof DashboardOrderIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/client/': {
      id: '/dashboard/client/'
      path: '/client'
      fullPath: '/dashboard/client'
      preLoaderRoute: typeof DashboardClientIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/category/': {
      id: '/dashboard/category/'
      path: '/category'
      fullPath: '/dashboard/category'
      preLoaderRoute: typeof DashboardCategoryIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/catalog/': {
      id: '/dashboard/catalog/'
      path: '/catalog'
      fullPath: '/dashboard/catalog'
      preLoaderRoute: typeof DashboardCatalogIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/campaign/': {
      id: '/dashboard/campaign/'
      path: '/campaign'
      fullPath: '/dashboard/campaign'
      preLoaderRoute: typeof DashboardCampaignIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/catalog/$campaign_id/': {
      id: '/catalog/$campaign_id/'
      path: '/'
      fullPath: '/catalog/$campaign_id/'
      preLoaderRoute: typeof CatalogCampaign_idIndexRouteImport
      parentRoute: typeof CatalogCampaign_idRouteRoute
    }
    '/dashboard/catalog/$catalog_id/': {
      id: '/dashboard/catalog/$catalog_id/'
      path: '/catalog/$catalog_id'
      fullPath: '/dashboard/catalog/$catalog_id'
      preLoaderRoute: typeof DashboardCatalogCatalog_idIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCampaignIndexRoute: typeof DashboardCampaignIndexRoute
  DashboardCatalogIndexRoute: typeof DashboardCatalogIndexRoute
  DashboardCategoryIndexRoute: typeof DashboardCategoryIndexRoute
  DashboardClientIndexRoute: typeof DashboardClientIndexRoute
  DashboardOrderIndexRoute: typeof DashboardOrderIndexRoute
  DashboardProductIndexRoute: typeof DashboardProductIndexRoute
  DashboardCatalogCatalog_idIndexRoute: typeof DashboardCatalogCatalog_idIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCampaignIndexRoute: DashboardCampaignIndexRoute,
  DashboardCatalogIndexRoute: DashboardCatalogIndexRoute,
  DashboardCategoryIndexRoute: DashboardCategoryIndexRoute,
  DashboardClientIndexRoute: DashboardClientIndexRoute,
  DashboardOrderIndexRoute: DashboardOrderIndexRoute,
  DashboardProductIndexRoute: DashboardProductIndexRoute,
  DashboardCatalogCatalog_idIndexRoute: DashboardCatalogCatalog_idIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface CatalogCampaign_idRouteRouteChildren {
  CatalogCampaign_idIndexRoute: typeof CatalogCampaign_idIndexRoute
}

const CatalogCampaign_idRouteRouteChildren: CatalogCampaign_idRouteRouteChildren =
  {
    CatalogCampaign_idIndexRoute: CatalogCampaign_idIndexRoute,
  }

const CatalogCampaign_idRouteRouteWithChildren =
  CatalogCampaign_idRouteRoute._addFileChildren(
    CatalogCampaign_idRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  CatalogCampaign_idRouteRoute: CatalogCampaign_idRouteRouteWithChildren,
  CatalogIndexRoute: CatalogIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
